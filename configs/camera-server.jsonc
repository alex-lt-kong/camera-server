{
	"httpService": {
		"interface": "127.0.0.1",
		"port": 54321
	},
	"devicesDefault": {
		"name": "Device-{{deviceIndex}}",
		"uri": "/dev/video-{{deviceIndex}}.mp4",
		"frame": {
			// Setting this to a lower value to limit CPU usage
			"throttleFpsIfHigherThan": 30,
			"rotation": -1,
			"overlayTextFontScale": 1,
			/* The below preferred values are directly sent to OpenCV. OpenCV (and
			its back-end) may or may not hornor our request. Note that these
			parameters do not control how videos are recorded, video recording
			are controlled by the motionDetection.videoRecording section below. */
			"preferredWidth": -1,
			"preferredHeight": -1,
			"preferredFps": 30
		},
		"snapshot": {
			"path": "/tmp/snapshot-{{deviceIndex}}.jpg",
			"frameInterval": 5
		},
		"motionDetection": {
			/* Valid values are:
			* 0, meaning "disabled": motion detection will NOT run and no video
			will be saved.
			* 1, meaning "detectMotion": motion detection will run and video will
			only be recorded if the following conditions are met. Events will be
			triggered.
			* 2, meaning "alwaysRecord": motion detection will NOT run and video
			will always be recorded. Events will be triggered.
			*/
			"mode": 0,
			/* To conserve CPU resources, motion detection will only be
			performed on every Nth frame, instead of every frame. */
			"diffEveryNthFrame": 10,
			/* If the b/w value of the same pixel is changed by more than
			pixelDiffAbsThreshold, this pixel will be considered "changed"*/
			"pixelDiffAbsThreshold": 32,
			/* If the number of changed pixel divided by the total number
			of pixels are within the range of [frameDiffPercentageLowerLimit,
			frameDiffPercentageUpperLimit], the frame will be considered
			"changed". A changed frame will trigger motion detection. */
			"frameDiffPercentageLowerLimit": 1.0,
			"frameDiffPercentageUpperLimit": 50.0,
			// Useful for debug but CPU intensive
			"drawContours": false,
			"videoRecording": {
				"minFramesPerVideo": 240,
				"maxFramesPerVideo": 108000,
				"encoder": {
					"useExternal": false,
					"internal": {
						"width": 1920,
						"height": 1080,
						"fps": 30,
						"videoPath": "/tmp/{{timestampOnVideoStarts}}.mp4"
					},
					"external": {
						"pipeRawVideoTo": "/usr/bin/ffmpeg -y -f rawvideo -pixel_format bgr24 -framerate 30 -video_size 1920x1080 -i pipe:0 -vcodec libx264 -pix_fmt yuv420p /tmp/{{timestamp}}.mp4 >> /tmp/ffmpeg-vid1.log 2>&1"
					}
				}
			}
		},
		"events": {
			"onVideoStarts": ["/usr/bin/printf", "video starts at [{{timestampOnVideoStarts}}] %s", "!"],
			"onVideoEnds": ["/usr/bin/echo", "onVideoEnds echoed from device [{{deviceIndex}}]"],
			"onDeviceOffline": ["/usr/bin/echo", "Device [{{deviceIndex}}] is offline at [{{timestampOnDeviceOffline}}]"],
			"onDeviceBackOnline": ["/usr/bin/echo", "Device [{{deviceName}}] is back online"]
		}
		
	},
	"devices": []
}